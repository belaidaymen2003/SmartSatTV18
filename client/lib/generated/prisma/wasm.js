
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  name: 'name',
  passwordHash: 'passwordHash',
  role: 'role',
  credits: 'credits',
  authLastAt: 'authLastAt',
  status: 'status',
  auth: 'auth',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VideoScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  thumbnail: 'thumbnail',
  videoUrl: 'videoUrl',
  price: 'price',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CatalogAppScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  downloadLink: 'downloadLink',
  image: 'image',
  credit: 'credit',
  version: 'version',
  storageRequired: 'storageRequired',
  internetConnection: 'internetConnection',
  deviceOperatingSystems: 'deviceOperatingSystems',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserCatalogAppScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  appId: 'appId',
  purchasedAt: 'purchasedAt'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  brandName: 'brandName',
  accentColor: 'accentColor',
  allowRegistrations: 'allowRegistrations',
  maintenanceMode: 'maintenanceMode',
  updatedAt: 'updatedAt'
};

exports.Prisma.BeInSportActivationScalarFieldEnum = {
  id: 'id',
  code: 'code',
  customerId: 'customerId',
  months: 'months',
  createdBy: 'createdBy',
  createdAt: 'createdAt'
};

exports.Prisma.IPTVChannelScalarFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  description: 'description',
  category: 'category',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  credit: 'credit',
  code: 'code',
  channelId: 'channelId',
  duration: 'duration',
  status: 'status',
  createAt: 'createAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  subscriptionId: 'subscriptionId',
  status: 'status',
  code: 'code',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  USER: 'USER'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  APPROVED: 'APPROVED',
  BANNED: 'BANNED'
};

exports.ItemCategory = exports.$Enums.ItemCategory = {
  MOVIE: 'MOVIE',
  TV_SERIES: 'TV_SERIES',
  ANIME: 'ANIME',
  CARTOON: 'CARTOON',
  LIVE_TV: 'LIVE_TV',
  STREAMING: 'STREAMING'
};

exports.ItemStatus = exports.$Enums.ItemStatus = {
  VISIBLE: 'VISIBLE',
  HIDDEN: 'HIDDEN'
};

exports.CommentStatus = exports.$Enums.CommentStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  HIDDEN: 'HIDDEN'
};

exports.ReviewStatus = exports.$Enums.ReviewStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  HIDDEN: 'HIDDEN'
};

exports.Quality = exports.$Enums.Quality = {
  SD: 'SD',
  HD: 'HD',
  FullHD: 'FullHD',
  K4: 'K4'
};

exports.Auth = exports.$Enums.Auth = {
  CONNECTED: 'CONNECTED',
  DISCONNECTED: 'DISCONNECTED'
};

exports.DurationPlan = exports.$Enums.DurationPlan = {
  ONE_MONTH: 'ONE_MONTH',
  SIX_MONTHS: 'SIX_MONTHS',
  ONE_YEAR: 'ONE_YEAR'
};

exports.Status = exports.$Enums.Status = {
  ACTIVE: 'ACTIVE',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED',
  SOLD_OUT: 'SOLD_OUT'
};

exports.Category = exports.$Enums.Category = {
  IPTV: 'IPTV',
  STREAMING: 'STREAMING'
};

exports.ChannelType = exports.$Enums.ChannelType = {
  SPORT: 'SPORT',
  NEWS: 'NEWS',
  ACTION: 'ACTION',
  ENTERTAINMENT: 'ENTERTAINMENT',
  KIDS: 'KIDS',
  MUSIC: 'MUSIC',
  LIFESTYLE: 'LIFESTYLE',
  EDUCATION: 'EDUCATION',
  OTHER: 'OTHER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Video: 'Video',
  CatalogApp: 'CatalogApp',
  UserCatalogApp: 'UserCatalogApp',
  Settings: 'Settings',
  BeInSportActivation: 'BeInSportActivation',
  IPTVChannel: 'IPTVChannel',
  Subscription: 'Subscription',
  UserSubscription: 'UserSubscription'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\belai\\OneDrive\\Desktop\\Web dev\\SmartSatTV\\SmartSatTV18\\client\\lib\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\belai\\OneDrive\\Desktop\\Web dev\\SmartSatTV\\SmartSatTV18\\client\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n//\nenum Role {\n  ADMIN\n  USER\n}\n\nenum UserStatus {\n  APPROVED\n  BANNED\n}\n\nenum ItemCategory {\n  MOVIE\n  TV_SERIES\n  ANIME\n  CARTOON\n  LIVE_TV\n  STREAMING\n}\n\nenum ItemStatus {\n  VISIBLE\n  HIDDEN\n}\n\nenum CommentStatus {\n  PENDING\n  APPROVED\n  HIDDEN\n}\n\nenum ReviewStatus {\n  PENDING\n  APPROVED\n  HIDDEN\n}\n\nenum Quality {\n  SD\n  HD\n  FullHD\n  K4\n}\n\nenum Auth {\n  CONNECTED\n  DISCONNECTED\n}\n\n// Subscription duration plans\nenum DurationPlan {\n  ONE_MONTH\n  SIX_MONTHS\n  ONE_YEAR\n}\n\n// Subscription status\nenum Status {\n  ACTIVE\n  EXPIRED\n  CANCELLED\n  SOLD_OUT\n}\n\nenum Category {\n  IPTV\n  STREAMING\n}\n\n//ss\nmodel User {\n  id                Int                   @id @default(autoincrement())\n  email             String                @unique\n  username          String                @unique\n  name              String\n  passwordHash      String\n  role              Role                  @default(USER)\n  credits           Int                   @default(0)\n  authLastAt        DateTime?\n  status            UserStatus            @default(APPROVED)\n  video             Video[]\n  auth              Auth                  @default(DISCONNECTED)\n  beinJobs          BeInSportActivation[] @relation(\"BeInByUser\")\n  userSubscriptions UserSubscription[]\n  downloadedApps    UserCatalogApp[]\n  createdAt         DateTime              @default(now())\n  updatedAt         DateTime              @updatedAt\n\n  @@index([role, status])\n}\n\n/**\n * model CatalogItem {\n * id            Int          @id @default(autoincrement())\n * title         String\n * rating        Float        @default(0)\n * category      ItemCategory\n * views         Int          @default(0)\n * status        ItemStatus   @default(VISIBLE)\n * mediaUrl      String?\n * quality       Quality?\n * age           String?\n * description   String?\n * runtime       String?\n * premiereDate  DateTime?\n * coverUrl      String?\n * backgroundUrl String?\n * country       String?\n * director      String?\n * actors        String[] // simple string array; switch to relation if needed\n * createdAt     DateTime     @default(now())\n * updatedAt     DateTime     @updatedAt\n * @@index([category, status])\n * @@index([title])\n * }\n */\nmodel Video {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String?\n  thumbnail   String?\n  videoUrl    String // Link to the actual video file or stream\n  price       Float\n  userId      Int?\n  user        User?    @relation(fields: [userId], references: [id])\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\nmodel CatalogApp {\n  id                     Int              @id @default(autoincrement())\n  name                   String\n  description            String\n  downloadLink           String\n  image                  String\n  credit                 Float\n  version                String\n  storageRequired        Int?\n  internetConnection     Boolean          @default(false)\n  deviceOperatingSystems String[]\n  createdAt              DateTime         @default(now())\n  updatedAt              DateTime         @updatedAt\n  downloadedBy           UserCatalogApp[]\n}\n\nmodel UserCatalogApp {\n  id          Int        @id @default(autoincrement())\n  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId      Int\n  app         CatalogApp @relation(fields: [appId], references: [id], onDelete: Cascade)\n  appId       Int\n  purchasedAt DateTime   @default(now())\n\n  @@unique([userId, appId])\n  @@index([userId])\n  @@index([appId])\n}\n\n/**\n * model Genre {\n * id        Int         @id @default(autoincrement())\n * name      String      @unique\n * items     ItemGenre[]\n * createdAt DateTime    @default(now())\n * }\n */\n\n/**\n * model ItemGenre {\n * itemId  Int\n * genreId Int\n * item    CatalogItem @relation(fields: [itemId], references: [id], onDelete: Cascade)\n * genre   Genre       @relation(fields: [genreId], references: [id], onDelete: Cascade)\n * @@id([itemId, genreId])\n * }\n */\n\n/**\n * model Tag {\n * id        Int       @id @default(autoincrement())\n * // Examples: \"GIFT CARDS\", \"beIN SPORTS\", \"Goosat\", \"CARTE INTERNET\"\n * name      String    @unique\n * items     ItemTag[]\n * createdAt DateTime  @default(now())\n * }\n */\n/**\n * model ItemTag {\n * itemId Int\n * tagId  Int\n * item   CatalogItem @relation(fields: [itemId], references: [id], onDelete: Cascade)\n * tag    Tag         @relation(fields: [tagId], references: [id], onDelete: Cascade)\n * @@id([itemId, tagId])\n * }\n */\n\n/**\n * model Comment {\n * id         Int           @id @default(autoincrement())\n * itemId     Int\n * userId     Int?\n * authorName String\n * content    String\n * status     CommentStatus @default(PENDING)\n * createdAt  DateTime      @default(now())\n * updatedAt  DateTime      @updatedAt\n * item CatalogItem @relation(fields: [itemId], references: [id], onDelete: Cascade)\n * user User?       @relation(fields: [userId], references: [id])\n * @@index([itemId, status])\n * }\n */\n\n/**\n * model Review {\n * id         Int          @id @default(autoincrement())\n * itemId     Int\n * userId     Int?\n * authorName String\n * rating     Float\n * content    String?\n * status     ReviewStatus @default(PENDING)\n * createdAt  DateTime     @default(now())\n * updatedAt  DateTime     @updatedAt\n * item CatalogItem @relation(fields: [itemId], references: [id], onDelete: Cascade)\n * user User?       @relation(fields: [userId], references: [id])\n * @@index([itemId, status])\n * }\n */\n\nmodel Settings {\n  id                 Int      @id @default(1)\n  brandName          String   @default(\"HOTFLIX\")\n  accentColor        String   @default(\"#f97316\")\n  allowRegistrations Boolean  @default(true)\n  maintenanceMode    Boolean  @default(false)\n  updatedAt          DateTime @updatedAt\n}\n\nmodel BeInSportActivation {\n  id         Int      @id @default(autoincrement())\n  code       String   @unique\n  customerId String\n  months     Int\n  createdBy  Int?\n  createdAt  DateTime @default(now())\n\n  author User? @relation(\"BeInByUser\", fields: [createdBy], references: [id])\n}\n\nenum ChannelType {\n  SPORT\n  NEWS\n  ACTION\n  ENTERTAINMENT\n  KIDS\n  MUSIC\n  LIFESTYLE\n  EDUCATION\n  OTHER\n}\n\nmodel IPTVChannel {\n  id            Int            @id @default(autoincrement())\n  name          String // Stream URL (.m3u8, etc.)\n  logo          String?\n  description   String?\n  category      Category // Price of subscription\n  type          ChannelType    @default(OTHER)\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  subscriptions Subscription[] // All users who subscribed\n}\n\nmodel Subscription {\n  id                Int                @id @default(autoincrement())\n  credit            Float              @default(0)\n  code              String?            @unique\n  channel           IPTVChannel        @relation(fields: [channelId], references: [id], onDelete: Cascade)\n  channelId         Int\n  duration          DurationPlan       @default(ONE_MONTH)\n  status            Status             @default(ACTIVE)\n  userSubscriptions UserSubscription[]\n  createAt          DateTime           @default(now())\n  updatedAt         DateTime           @updatedAt\n\n  @@index([channelId, status])\n}\n\nmodel UserSubscription {\n  id             Int          @id @default(autoincrement())\n  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId         Int\n  subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n  subscriptionId Int\n  status         Status       @default(ACTIVE)\n  code           String?\n  startDate      DateTime     @default(now())\n  endDate        DateTime\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  @@unique([userId, subscriptionId])\n  @@index([userId, status])\n}\n",
  "inlineSchemaHash": "0a134cd89cb4957098e68b719449edb14b87c7ba20238b731630ba2084c52ae6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"credits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"authLastAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"video\",\"kind\":\"object\",\"type\":\"Video\",\"relationName\":\"UserToVideo\"},{\"name\":\"auth\",\"kind\":\"enum\",\"type\":\"Auth\"},{\"name\":\"beinJobs\",\"kind\":\"object\",\"type\":\"BeInSportActivation\",\"relationName\":\"BeInByUser\"},{\"name\":\"userSubscriptions\",\"kind\":\"object\",\"type\":\"UserSubscription\",\"relationName\":\"UserToUserSubscription\"},{\"name\":\"downloadedApps\",\"kind\":\"object\",\"type\":\"UserCatalogApp\",\"relationName\":\"UserToUserCatalogApp\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Video\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"videoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVideo\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CatalogApp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"downloadLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storageRequired\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"internetConnection\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deviceOperatingSystems\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"downloadedBy\",\"kind\":\"object\",\"type\":\"UserCatalogApp\",\"relationName\":\"CatalogAppToUserCatalogApp\"}],\"dbName\":null},\"UserCatalogApp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserCatalogApp\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"app\",\"kind\":\"object\",\"type\":\"CatalogApp\",\"relationName\":\"CatalogAppToUserCatalogApp\"},{\"name\":\"appId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"purchasedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Settings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brandName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accentColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allowRegistrations\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"maintenanceMode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BeInSportActivation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"months\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BeInByUser\"}],\"dbName\":null},\"IPTVChannel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"Category\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ChannelType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"IPTVChannelToSubscription\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"credit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel\",\"kind\":\"object\",\"type\":\"IPTVChannel\",\"relationName\":\"IPTVChannelToSubscription\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duration\",\"kind\":\"enum\",\"type\":\"DurationPlan\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"userSubscriptions\",\"kind\":\"object\",\"type\":\"UserSubscription\",\"relationName\":\"SubscriptionToUserSubscription\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserSubscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSubscription\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToUserSubscription\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

